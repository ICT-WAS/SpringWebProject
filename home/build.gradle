plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.0'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.ict'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//db 설정
	implementation 'org.mariadb.jdbc:mariadb-java-client'

	//jwt 의존성
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//스프링 유효성 검사
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//스프링 시큐리티
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// openAPI
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

	//email 인증
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework:spring-context'
	implementation 'org.springframework:spring-context-support'
	implementation 'com.sun.mail:jakarta.mail:2.0.1'

	//휴대폰 인증
	implementation 'net.nurigo:sdk:4.3.0'

	//Webflux - 비동기/논블로킹
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}
// QueryDSL
sourceSets {
	main {
		java {
			srcDirs = ["$projectDir/src/main/java", "$buildDir/generated/sources/annotationProcessor/java/main"]
		}
	}
}
compileJava {
	options.annotationProcessorPath = configurations.annotationProcessor
}

tasks.named('test') {
	useJUnitPlatform()
}